---
# Namespace for all resources
apiVersion: v1
kind: Namespace
metadata:
  name: webapps

---
# Secret for Database credentials
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: webapps
type: Opaque
stringData:
  MYSQL_USERNAME: appuser
  MYSQL_PASSWORD: appuser123
  # Adding a ROOT password for MySQL StatefulSet setup
  MYSQL_ROOT_PASSWORD: rootpassword123 

---
# ConfigMap for Database name
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: webapps
data:
  MYSQL_DATABASE: bankappdb

---
# StorageClass for AWS EBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
provisioner: ebs.csi.aws.com
parameters:
  type: gp3
  fsType: ext4
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---
# Headless Service for MySQL StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: bankapp-mysql-primary
  namespace: webapps
spec:
  selector:
    app: bankapp-mysql
  clusterIP: None # Makes it a Headless Service for deterministic networking
  ports:
    - port: 3306
      targetPort: 3306

---
# MySQL Database StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: bankapp-mysql
  namespace: webapps
spec:
  selector:
    matchLabels:
      app: bankapp-mysql
  serviceName: bankapp-mysql-primary
  replicas: 1
  template:
    metadata:
      labels:
        app: bankapp-mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            # Set the database name from ConfigMap
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: MYSQL_DATABASE
            # Set the application user/password from Secret
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USERNAME
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            # Set the root password from Secret
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
  # Persistent Volume Claim Template
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: ebs-sc
        resources:
          requests:
            storage: 10Gi

---
# BankApp Deployment (Fixed)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bankapp
  namespace: webapps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bankapp
  template:
    metadata:
      labels:
        app: bankapp
    spec:
      containers:
        - name: bankapp
          image: adijaiswal/bankapp:v6
          ports:
            - containerPort: 8080
          env:
            # FIX: Removed the redundant 'SPRING_DATASOURCE_URL: ' prefix.
            # IMPR: Using environment variable substitution for the DB name.
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://bankapp-mysql-primary:3306/bankappdb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
          livenessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"

---
# BankApp Service (LoadBalancer)
apiVersion: v1
kind: Service
metadata:
  name: bankapp-service
  namespace: webapps
spec:
  type: LoadBalancer # Exposes the application externally
  selector:
    app: bankapp
  ports:
    - port: 80
      targetPort: 8080
